/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package inventory;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author trion
 */
public class CustomerUI extends javax.swing.JFrame {

    /**
     * Creates new form CustomerUI
     */
    public CustomerUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        addressTxt = new javax.swing.JTextField();
        emailTxt = new javax.swing.JTextField();
        phoneTxt = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Name");

        jLabel2.setText("Address");

        jLabel3.setText("Email");

        jLabel4.setText("Phone Number");

        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        exitButton.setText("EXIT");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        jButton1.setText("MAIN MENU");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(266, 266, 266)
                .addComponent(addButton)
                .addContainerGap(280, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel4)
                        .addComponent(jLabel3)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                            .addComponent(addressTxt)
                            .addComponent(emailTxt)
                            .addComponent(phoneTxt))
                        .addGap(59, 59, 59))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(exitButton)
                        .addGap(39, 39, 39))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(addressTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(emailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(phoneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addComponent(addButton)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exitButton)
                        .addGap(51, 51, 51))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public static void createDatabase(){
        Connection conn = null;
        Statement statement = null;
        
        final String newTable = "customer";
        
        try {
            conn = DriverManager.getConnection("jdbc:derby:InventoryDB;create=true");
        } catch (SQLException ex) {
            Logger.getLogger(BookUI.class.getName()).log(Level.SEVERE, null, ex);
        }
         
         try
         {
             statement = conn.createStatement();
             
             
             statement.addBatch("drop table customer");
             
             //String sqlCreateTable = ;
             
             statement.addBatch("CREATE TABLE customer (name VARCHAR(70), Address VARCHAR(50), email VARCHAR(30), phoneno int)");
             System.out.println("making table ");
             statement.executeBatch();
             
         }
         
         catch (SQLException ex)
         {
             System.err.println("SQLException: " + ex.getMessage());
         }
        
    }

    
    
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        
        /*Connection conn = null;
        Statement statement = null;
        
        String newTable = "customerTable";
        
        try {
            conn = DriverManager.getConnection("jdbc:derby://localhost:1527/InventoryDB;create=true");
        } catch (SQLException ex) {
            Logger.getLogger(BookUI.class.getName()).log(Level.SEVERE, null, ex);
        }
         
         try
         {
             statement = conn.createStatement();
             
             
             statement.executeUpdate("drop table if exists " + newTable);
             
             String sqlCreateTable = "CREATE TABLE" + newTable + "(Name VARCHAR(70), Address VARCHAR(50), Phone INT, Email VARCHAR(30))";
             
             statement.executeUpdate(sqlCreateTable);
             
         }
         
         catch (SQLException ex)
         {
             System.err.println("SQLException: " + ex.getMessage());
         }
        
        String name = nameTxt.getText();
        String address = addressTxt.getText();
        
        String email = emailTxt.getText();
        int phone = Integer.parseInt(phoneTxt.getText());
        
        
        if (name.equals(null) || address.equals(null) || phone < 0 || email.equals(null))
        {
            JOptionPane.showMessageDialog(null,"Please fill in all the fields");
        }
        
        else 
        {
            Customer newCustomer = new Customer(name, address, email, phone);
            
            try {
                
                statement.executeUpdate("insert into " + newTable + " values('" + newCustomer.getName()+"','"+newCustomer.getAddress()+"','"+newCustomer.getEmail()+"','"+newCustomer.getNumber()+"','"+"');");
                
                //jTextArea2.append("Customer added successfully:\n" + book.getTitle());
                //dialog.dispose();
                } catch (SQLException ex)
                {
                     System.err.println("SQLException: " + ex.getMessage());
                }
        
        
            
        }*/
        
       createDatabase();
       
       Connection conn = null;
        Statement statement = null;
        
        final String newTable = "customer";
        
        try {
            conn = DriverManager.getConnection("jdbc:derby:InventoryDB;create=true");
        } catch (SQLException ex) {
            Logger.getLogger(BookUI.class.getName()).log(Level.SEVERE, null, ex);
        }
         
         try
         {
             statement = conn.createStatement();
             
             
             statement.addBatch("drop table customer");
             
             //String sqlCreateTable = ;
             
             statement.addBatch("CREATE TABLE customer (name VARCHAR(70), Address VARCHAR(50), email VARCHAR(30), phoneno int)");
             System.out.println("making table ");
             statement.executeBatch();
             
         }
         
         catch (SQLException ex)
         {
             System.err.println("SQLException: " + ex.getMessage());
         }
       
       String name = nameTxt.getText();
       String address = addressTxt.getText();
       String email = emailTxt.getText();
       int phoneno = Integer.parseInt(phoneTxt.getText());
       
       Customer newCustomer = new Customer (name, address, email, phoneno);
       
       System.out.println("here is customer"+name + address + email + phoneno);
                //store.addBook(book);
               final Statement finalStatement = statement;
                try {
                
                //finalStatement.executeQuery("insert into books values('"+book.getTitle()+"','"+book.getAuthor()+"','"+book.getPrice()+"','"+book.getQuantity()+"','"+book.getSerialNo()+"')");
                                                                   
                finalStatement.executeUpdate("INSERT INTO customer VALUES ('" + newCustomer.getName() + "','" + newCustomer.getAddress() + "','" + newCustomer.getEmail()+ "','" + newCustomer.getNumber() + "')");


                //finalStatement.executeQuery("insert into books values('"+book.getTitle()+"','"+book.getAuthor()+"', 100'"+book.getPrice()+"','"+book.getQuantity()+"','"+book.getSerialNo()+"')");
                
                System.out.println("\nBook added successfully:" + newCustomer.getName());
                
                } catch (SQLException ex)
                {
                     System.err.println("SQLException: " + ex.getMessage());
                }
        
    }//GEN-LAST:event_addButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField addressTxt;
    private javax.swing.JTextField emailTxt;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JTextField phoneTxt;
    // End of variables declaration//GEN-END:variables
}
